name: first pipeline

on:
  push:
    branches:
      - main

jobs:
  DEPLOY:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Get the commit hashes
        id: get_commits
        run: |
          # Get the commit SHA of the current push event
          CURRENT_COMMIT=$(git rev-parse HEAD)

          # Get the commit SHA of the previous commit using git log
          PREVIOUS_COMMIT=$(git log -n 1 --skip 1 --pretty=format:"%H")

          echo "Current Commit: $CURRENT_COMMIT"
          echo "Previous Commit: $PREVIOUS_COMMIT"

          # Get the changed files from the commit range (between the previous commit and the current commit)
          CHANGED_FILES=$(git diff --name-only $PREVIOUS_COMMIT $CURRENT_COMMIT)

          # Extract the folder name from the changed file paths and store in an array
          CHANGED_FOLDERS=($(echo "${CHANGED_FILES}" | grep -o 'myapp/[^/]*' | sort -u))

          # Join the array elements with comma to form a comma-separated string
          CHANGED_FOLDER_LIST=$(IFS=','; echo "${CHANGED_FOLDERS[*]}")

          # Check if there are any changed folders before setting the environment variable
          if [ -n "$CHANGED_FOLDER_LIST" ]; then
            echo "Changed folder(s): $CHANGED_FOLDER_LIST" >> $GITHUB_ENV
          else
            echo "No folders were changed." >> $GITHUB_ENV
          fi

      - name: Execute commands based on folder name
        run: |
          # Check if there are any changed folders before running the commands
          if [ -n "$CHANGED_FOLDER_LIST" ]; then
            for folder in $(echo "${{ env.CHANGED_FOLDER_LIST }}" | tr "," "\n"); do
              echo "Processing folder: $folder"
              
            done
          else
            echo "No folders were changed. No further action needed."
          fi
