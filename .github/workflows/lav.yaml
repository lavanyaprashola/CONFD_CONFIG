on:
  push:
    branches:

      - main
      - development
jobs:

 set_environment:

     runs-on: ubuntu-latest
     steps:

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Determine environment based on branch
        id: set_env
        run: |
          if [ "$GITHUB_REF" == "refs/heads/main" ]; then
            echo "environment=dev" >> "$GITHUB_ENV"
            
          elif [ "$GITHUB_REF" == "refs/heads/development" ]; then
            echo "environment=prod" >> "$GITHUB_ENV" 
          fi
     outputs:
       environment: ${{ env.environment }}
      
       
 CloudFront_DEPLOY:
 
   runs-on: ubuntu-latest
   needs: set_environment  
   environment: ${{ needs.set_environment.outputs.environment }}
   env:
       STAGE: ${{ secrets.STAGE }}
   steps:
     - name: Checkout code
       uses: actions/checkout@v2
     - name: Configure AWS Credentials Action For GitHub Actions
       uses: aws-actions/configure-aws-credentials@v2
       with:
            aws-access-key-id: ${{ secrets.ACCESS_KEY}}
            aws-secret-access-key: ${{ secrets.SECRET_KEY }}
            aws-region: ${{ secrets.REGION }}
            
     - name: Npm installation
       run: |
           npm install
     - name: folder selection
       uses: dorny/paths-filter@v2
       id: changes
       with:
           filters: |
              notfication:
                - 'myapp/lavanya**'
              report:
                - 'myapp/pavi**'
              merchant-settings:
                - 'src/apps/merchant-settings/**'
          
     - name: Execute commands based on folder name -notfication
       if: steps.changes.outputs.notfication == 'true'
       run: |
         npx serverless mono --app notification --command 'deploy --stage $STAGE'
     
     - name: Execute commands based on folder name -report
       if: steps.changes.outputs.report == 'true'
       run: |
         echo "npx serverless mono --app report --command"
     - name: Execute commands based on folder name -notfication
       if: steps.changes.outputs.merchant-settings == 'true'
       run: |
         echo "npx serverless mono --app merchant-settings --command "

    
